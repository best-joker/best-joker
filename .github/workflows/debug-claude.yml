name: Debug Claude Code

on:
  # 手动触发，用于调试
  workflow_dispatch:
    inputs:
      test_type:
        description: '测试类型'
        required: true
        default: 'mention'
        type: choice
        options:
        - mention
        - review
        - custom
      custom_prompt:
        description: '自定义提示（如果选择custom）'
        required: false
        default: 'hello, test claude code'
        type: string

  # 也可以通过Issue评论触发调试
  issue_comment:
    types: [created]

jobs:
  debug-info:
    runs-on: ubuntu-latest
    steps:
      - name: Print Debug Information
        run: |
          echo "🔍 Debug Information:"
          echo "Repository: ${{ github.repository }}"
          echo "Event Name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "SHA: ${{ github.sha }}"
          echo "Actor: ${{ github.actor }}"
          echo "Workflow: ${{ github.workflow }}"
          echo ""
          echo "📋 Event Context:"
          echo "Triggered by: ${{ github.event_name }}"

      - name: Print Event Details (Safe)
        run: |
          echo "🔧 Event Context (safe):"
          if [ "${{ github.event_name }}" = "issue_comment" ]; then
            echo "Issue/PR Number: ${{ github.event.issue.number }}"
            echo "Comment Author: ${{ github.event.comment.user.login }}"
            echo "Comment Body (first 100 chars): ${{ github.event.comment.body }}"
          elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "Test Type: ${{ github.event.inputs.test_type }}"
            echo "Custom Prompt: ${{ github.event.inputs.custom_prompt }}"
          fi

  test-claude-mention:
    runs-on: ubuntu-latest
    if: |
      contains(github.event.comment.body, '@claude') ||
      contains(github.event.issue.body, '@claude') ||
      github.event_name == 'workflow_dispatch'
    permissions:
      contents: read
      issues: write
      pull-requests: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Check Claude Code Action
        id: check-action
        run: |
          echo "🔍 Checking Claude Code Action availability..."
          echo "Action URL: https://github.com/marketplace/actions/claude-code-action"

      - name: Test Claude Code (Simple)
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          prompt: |
            % if (github.event.inputs.test_type == 'custom') {
              ${{ github.event.inputs.custom_prompt }}
            % } else if (github.event.inputs.test_type == 'review') {
              /review
            % } else {
              Hello! This is a test of Claude Code integration.
              Please confirm you can read this repository and respond with a simple greeting.
            % }
          claude_args: "--max-turns 1 --model claude-3-haiku-20240307"
        continue-on-error: true

      - name: Debug Claude Code Result
        if: always()
        run: |
          echo "🔍 Claude Code execution result:"
          echo "Exit code: ${{ job.status }}"

          # 尝试找到Claude的输出
          if [ -f "${{ steps.test-claude-mention.outputs.output }}" ]; then
            echo "Claude output found"
          else
            echo "No direct output file found"
          fi

  test-basic-functionality:
    runs-on: ubuntu-latest
    steps:
      - name: Test Basic Commands
        run: |
          echo "🔧 Testing basic functionality..."

          # 测试Node.js
          node --version
          npm --version

          # 测试网络连接
          curl -I https://api.anthropic.com

          # 测试secrets（不显示实际值）
          if [ -n "${{ secrets.ANTHROPIC_API_KEY }}" ]; then
            echo "✅ ANTHROPIC_API_KEY is set"
          else
            echo "❌ ANTHROPIC_API_KEY is not set"
          fi